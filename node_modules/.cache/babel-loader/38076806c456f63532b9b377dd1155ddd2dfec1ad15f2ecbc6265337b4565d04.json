{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alisu\\\\Projects\\\\first\\\\src\\\\components\\\\counter.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Counter extends Component {\n  constructor() {\n    super();\n    this.state = {\n      //Attributes\n      count: 0,\n      tags: ['tag1', 'tag2', 'tag3']\n      //imrageUrl: 'https://picsum.photos/200' <img src={this.state.imrageUrl} alt=\"\"/>\n    };\n    this.styles = {\n      fontSize: 25,\n      fontWeight: 'bold'\n    };\n    this.handleIncrement.bind(this);\n  }\n  renderTags() {\n    if (this.state.tags.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are no tags!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 50\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.state.tags.map(tag => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: tag\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 48\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n  handleIncrement() {\n    console.log('Increment Clicked', this.formatCount());\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: this.getBadgeClasses(),\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleIncrement,\n        className: \"btn btn-secondary btn-sm\",\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), this.state.tags.length === 0 && 'Please create a new tag!', this.renderTags()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n  }\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n  formatCount() {\n    const {\n      count\n    } = this.state;\n    return count === 0 ? 'Zero' : count;\n  }\n}\nexport default Counter;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Counter","constructor","state","count","tags","styles","fontSize","fontWeight","handleIncrement","bind","renderTags","length","children","fileName","_jsxFileName","lineNumber","columnNumber","map","tag","console","log","formatCount","render","className","getBadgeClasses","onClick","classes"],"sources":["C:/Users/alisu/Projects/first/src/components/counter.jsx"],"sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Counter extends Component { \r\n    state = { \r\n        //Attributes\r\n        count: 0,\r\n        tags: ['tag1', 'tag2', 'tag3']\r\n        //imrageUrl: 'https://picsum.photos/200' <img src={this.state.imrageUrl} alt=\"\"/>\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.handleIncrement.bind(this);\r\n    }\r\n\r\n    styles = {\r\n        fontSize: 25,\r\n        fontWeight: 'bold'\r\n    };\r\n\r\n    renderTags() {\r\n        if (this.state.tags.length === 0) return <p>There are no tags!</p>\r\n\r\n        return <ul>{this.state.tags.map(tag => <li key={tag}>{tag}</li>)}</ul>\r\n    }\r\n\r\n    handleIncrement() {\r\n        console.log('Increment Clicked', this.formatCount());\r\n    }\r\n\r\n    render() { \r\n        return (\r\n        <div>\r\n            <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n            <button onClick={this.handleIncrement} className=\"btn btn-secondary btn-sm\">Increment</button>\r\n            \r\n            {this.state.tags.length === 0 && 'Please create a new tag!'}\r\n            {this.renderTags()}\r\n        </div>\r\n        );\r\n    }\r\n\r\n    getBadgeClasses() {\r\n        let classes = \"badge m-2 badge-\";\r\n        classes += (this.state.count === 0) ? \"warning\" : \"primary\";\r\n        return classes;\r\n    }\r\n\r\n    formatCount() {\r\n        const { count } = this.state;\r\n       return count === 0 ? 'Zero' : count;\r\n    }\r\n}\r\n \r\nexport default Counter;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,SAASH,SAAS,CAAC;EAQ5BI,WAAWA,CAAA,EAAG;IACV,KAAK,EAAE;IAAC,KARZC,KAAK,GAAG;MACJ;MACAC,KAAK,EAAE,CAAC;MACRC,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM;MAC7B;IACJ,CAAC;IAAA,KAODC,MAAM,GAAG;MACLC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE;IAChB,CAAC;IANG,IAAI,CAACC,eAAe,CAACC,IAAI,CAAC,IAAI,CAAC;EACnC;EAOAC,UAAUA,CAAA,EAAG;IACT,IAAI,IAAI,CAACR,KAAK,CAACE,IAAI,CAACO,MAAM,KAAK,CAAC,EAAE,oBAAOZ,OAAA;MAAAa,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;IAElE,oBAAOjB,OAAA;MAAAa,QAAA,EAAK,IAAI,CAACV,KAAK,CAACE,IAAI,CAACa,GAAG,CAACC,GAAG,iBAAInB,OAAA;QAAAa,QAAA,EAAeM;MAAG,GAATA,GAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAY;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAC1E;EAEAR,eAAeA,CAAA,EAAG;IACdW,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAACC,WAAW,EAAE,CAAC;EACxD;EAEAC,MAAMA,CAAA,EAAG;IACL,oBACAvB,OAAA;MAAAa,QAAA,gBACIb,OAAA;QAAMwB,SAAS,EAAE,IAAI,CAACC,eAAe,EAAG;QAAAZ,QAAA,EAAE,IAAI,CAACS,WAAW;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACpEjB,OAAA;QAAQ0B,OAAO,EAAE,IAAI,CAACjB,eAAgB;QAACe,SAAS,EAAC,0BAA0B;QAAAX,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,EAE7F,IAAI,CAACd,KAAK,CAACE,IAAI,CAACO,MAAM,KAAK,CAAC,IAAI,0BAA0B,EAC1D,IAAI,CAACD,UAAU,EAAE;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChB;EAEV;EAEAQ,eAAeA,CAAA,EAAG;IACd,IAAIE,OAAO,GAAG,kBAAkB;IAChCA,OAAO,IAAK,IAAI,CAACxB,KAAK,CAACC,KAAK,KAAK,CAAC,GAAI,SAAS,GAAG,SAAS;IAC3D,OAAOuB,OAAO;EAClB;EAEAL,WAAWA,CAAA,EAAG;IACV,MAAM;MAAElB;IAAM,CAAC,GAAG,IAAI,CAACD,KAAK;IAC7B,OAAOC,KAAK,KAAK,CAAC,GAAG,MAAM,GAAGA,KAAK;EACtC;AACJ;AAEA,eAAeH,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}